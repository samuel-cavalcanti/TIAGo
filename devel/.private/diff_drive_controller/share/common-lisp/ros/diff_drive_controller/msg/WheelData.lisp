; Auto-generated. Do not edit!


(cl:in-package diff_drive_controller-msg)


;//! \htmlinclude WheelData.msg.html

(cl:defclass <WheelData> (roslisp-msg-protocol:ros-message)
  ((left_wheel_joint_names
    :reader left_wheel_joint_names
    :initarg :left_wheel_joint_names
    :type (cl:vector cl:string)
   :initform (cl:make-array 0 :element-type 'cl:string :initial-element ""))
   (right_wheel_joint_names
    :reader right_wheel_joint_names
    :initarg :right_wheel_joint_names
    :type (cl:vector cl:string)
   :initform (cl:make-array 0 :element-type 'cl:string :initial-element ""))
   (left_wheel_joint_actual_position
    :reader left_wheel_joint_actual_position
    :initarg :left_wheel_joint_actual_position
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (right_wheel_joint_actual_position
    :reader right_wheel_joint_actual_position
    :initarg :right_wheel_joint_actual_position
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (left_wheel_joint_actual_velocity
    :reader left_wheel_joint_actual_velocity
    :initarg :left_wheel_joint_actual_velocity
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (right_wheel_joint_actual_velocity
    :reader right_wheel_joint_actual_velocity
    :initarg :right_wheel_joint_actual_velocity
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (left_wheel_joint_reference_velocity
    :reader left_wheel_joint_reference_velocity
    :initarg :left_wheel_joint_reference_velocity
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (right_wheel_joint_reference_velocity
    :reader right_wheel_joint_reference_velocity
    :initarg :right_wheel_joint_reference_velocity
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0)))
)

(cl:defclass WheelData (<WheelData>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <WheelData>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'WheelData)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name diff_drive_controller-msg:<WheelData> is deprecated: use diff_drive_controller-msg:WheelData instead.")))

(cl:ensure-generic-function 'left_wheel_joint_names-val :lambda-list '(m))
(cl:defmethod left_wheel_joint_names-val ((m <WheelData>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader diff_drive_controller-msg:left_wheel_joint_names-val is deprecated.  Use diff_drive_controller-msg:left_wheel_joint_names instead.")
  (left_wheel_joint_names m))

(cl:ensure-generic-function 'right_wheel_joint_names-val :lambda-list '(m))
(cl:defmethod right_wheel_joint_names-val ((m <WheelData>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader diff_drive_controller-msg:right_wheel_joint_names-val is deprecated.  Use diff_drive_controller-msg:right_wheel_joint_names instead.")
  (right_wheel_joint_names m))

(cl:ensure-generic-function 'left_wheel_joint_actual_position-val :lambda-list '(m))
(cl:defmethod left_wheel_joint_actual_position-val ((m <WheelData>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader diff_drive_controller-msg:left_wheel_joint_actual_position-val is deprecated.  Use diff_drive_controller-msg:left_wheel_joint_actual_position instead.")
  (left_wheel_joint_actual_position m))

(cl:ensure-generic-function 'right_wheel_joint_actual_position-val :lambda-list '(m))
(cl:defmethod right_wheel_joint_actual_position-val ((m <WheelData>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader diff_drive_controller-msg:right_wheel_joint_actual_position-val is deprecated.  Use diff_drive_controller-msg:right_wheel_joint_actual_position instead.")
  (right_wheel_joint_actual_position m))

(cl:ensure-generic-function 'left_wheel_joint_actual_velocity-val :lambda-list '(m))
(cl:defmethod left_wheel_joint_actual_velocity-val ((m <WheelData>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader diff_drive_controller-msg:left_wheel_joint_actual_velocity-val is deprecated.  Use diff_drive_controller-msg:left_wheel_joint_actual_velocity instead.")
  (left_wheel_joint_actual_velocity m))

(cl:ensure-generic-function 'right_wheel_joint_actual_velocity-val :lambda-list '(m))
(cl:defmethod right_wheel_joint_actual_velocity-val ((m <WheelData>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader diff_drive_controller-msg:right_wheel_joint_actual_velocity-val is deprecated.  Use diff_drive_controller-msg:right_wheel_joint_actual_velocity instead.")
  (right_wheel_joint_actual_velocity m))

(cl:ensure-generic-function 'left_wheel_joint_reference_velocity-val :lambda-list '(m))
(cl:defmethod left_wheel_joint_reference_velocity-val ((m <WheelData>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader diff_drive_controller-msg:left_wheel_joint_reference_velocity-val is deprecated.  Use diff_drive_controller-msg:left_wheel_joint_reference_velocity instead.")
  (left_wheel_joint_reference_velocity m))

(cl:ensure-generic-function 'right_wheel_joint_reference_velocity-val :lambda-list '(m))
(cl:defmethod right_wheel_joint_reference_velocity-val ((m <WheelData>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader diff_drive_controller-msg:right_wheel_joint_reference_velocity-val is deprecated.  Use diff_drive_controller-msg:right_wheel_joint_reference_velocity instead.")
  (right_wheel_joint_reference_velocity m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <WheelData>) ostream)
  "Serializes a message object of type '<WheelData>"
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'left_wheel_joint_names))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((__ros_str_len (cl:length ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_str_len) ostream))
  (cl:map cl:nil #'(cl:lambda (c) (cl:write-byte (cl:char-code c) ostream)) ele))
   (cl:slot-value msg 'left_wheel_joint_names))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'right_wheel_joint_names))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((__ros_str_len (cl:length ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_str_len) ostream))
  (cl:map cl:nil #'(cl:lambda (c) (cl:write-byte (cl:char-code c) ostream)) ele))
   (cl:slot-value msg 'right_wheel_joint_names))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'left_wheel_joint_actual_position))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'left_wheel_joint_actual_position))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'right_wheel_joint_actual_position))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'right_wheel_joint_actual_position))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'left_wheel_joint_actual_velocity))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'left_wheel_joint_actual_velocity))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'right_wheel_joint_actual_velocity))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'right_wheel_joint_actual_velocity))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'left_wheel_joint_reference_velocity))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'left_wheel_joint_reference_velocity))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'right_wheel_joint_reference_velocity))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'right_wheel_joint_reference_velocity))
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <WheelData>) istream)
  "Deserializes a message object of type '<WheelData>"
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'left_wheel_joint_names) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'left_wheel_joint_names)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((__ros_str_len 0))
      (cl:setf (cl:ldb (cl:byte 8 0) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:make-string __ros_str_len))
      (cl:dotimes (__ros_str_idx __ros_str_len msg)
        (cl:setf (cl:char (cl:aref vals i) __ros_str_idx) (cl:code-char (cl:read-byte istream))))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'right_wheel_joint_names) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'right_wheel_joint_names)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((__ros_str_len 0))
      (cl:setf (cl:ldb (cl:byte 8 0) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:make-string __ros_str_len))
      (cl:dotimes (__ros_str_idx __ros_str_len msg)
        (cl:setf (cl:char (cl:aref vals i) __ros_str_idx) (cl:code-char (cl:read-byte istream))))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'left_wheel_joint_actual_position) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'left_wheel_joint_actual_position)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'right_wheel_joint_actual_position) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'right_wheel_joint_actual_position)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'left_wheel_joint_actual_velocity) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'left_wheel_joint_actual_velocity)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'right_wheel_joint_actual_velocity) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'right_wheel_joint_actual_velocity)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'left_wheel_joint_reference_velocity) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'left_wheel_joint_reference_velocity)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'right_wheel_joint_reference_velocity) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'right_wheel_joint_reference_velocity)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<WheelData>)))
  "Returns string type for a message object of type '<WheelData>"
  "diff_drive_controller/WheelData")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'WheelData)))
  "Returns string type for a message object of type 'WheelData"
  "diff_drive_controller/WheelData")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<WheelData>)))
  "Returns md5sum for a message object of type '<WheelData>"
  "f3cef9a3c8f62c082f7316e75ecd5bc5")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'WheelData)))
  "Returns md5sum for a message object of type 'WheelData"
  "f3cef9a3c8f62c082f7316e75ecd5bc5")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<WheelData>)))
  "Returns full string definition for message of type '<WheelData>"
  (cl:format cl:nil "string[] left_wheel_joint_names~%string[] right_wheel_joint_names~%~%float64[] left_wheel_joint_actual_position~%float64[] right_wheel_joint_actual_position~%~%float64[] left_wheel_joint_actual_velocity~%float64[] right_wheel_joint_actual_velocity~%~%float64[] left_wheel_joint_reference_velocity~%float64[] right_wheel_joint_reference_velocity~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'WheelData)))
  "Returns full string definition for message of type 'WheelData"
  (cl:format cl:nil "string[] left_wheel_joint_names~%string[] right_wheel_joint_names~%~%float64[] left_wheel_joint_actual_position~%float64[] right_wheel_joint_actual_position~%~%float64[] left_wheel_joint_actual_velocity~%float64[] right_wheel_joint_actual_velocity~%~%float64[] left_wheel_joint_reference_velocity~%float64[] right_wheel_joint_reference_velocity~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <WheelData>))
  (cl:+ 0
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'left_wheel_joint_names) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4 (cl:length ele))))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'right_wheel_joint_names) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4 (cl:length ele))))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'left_wheel_joint_actual_position) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'right_wheel_joint_actual_position) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'left_wheel_joint_actual_velocity) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'right_wheel_joint_actual_velocity) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'left_wheel_joint_reference_velocity) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'right_wheel_joint_reference_velocity) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <WheelData>))
  "Converts a ROS message object to a list"
  (cl:list 'WheelData
    (cl:cons ':left_wheel_joint_names (left_wheel_joint_names msg))
    (cl:cons ':right_wheel_joint_names (right_wheel_joint_names msg))
    (cl:cons ':left_wheel_joint_actual_position (left_wheel_joint_actual_position msg))
    (cl:cons ':right_wheel_joint_actual_position (right_wheel_joint_actual_position msg))
    (cl:cons ':left_wheel_joint_actual_velocity (left_wheel_joint_actual_velocity msg))
    (cl:cons ':right_wheel_joint_actual_velocity (right_wheel_joint_actual_velocity msg))
    (cl:cons ':left_wheel_joint_reference_velocity (left_wheel_joint_reference_velocity msg))
    (cl:cons ':right_wheel_joint_reference_velocity (right_wheel_joint_reference_velocity msg))
))
